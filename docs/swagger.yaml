basePath: /
definitions:
  main.CreatePostBody:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  main.Post:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:3000
info:
  contact: {}
  description: A REST API for managing posts and users
  title: Posts API
  version: "1.0"
paths:
  /:
    get:
      description: Returns OK if the server is running
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /posts:
    get:
      description: Returns all posts ordered by creation date (newest first)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Post'
            type: array
        "500":
          description: Failed to fetch posts
          schema:
            type: string
      summary: Get all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Creates a new post for the authenticated user
      parameters:
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/main.CreatePostBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Post'
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Failed to authenticate
          schema:
            type: string
        "500":
          description: Failed to create post
          schema:
            type: string
      summary: Create post
      tags:
      - posts
  /user/{id}/posts:
    get:
      description: Returns all posts for a specific user ordered by creation date
        (newest first)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Post'
            type: array
        "500":
          description: Failed to fetch user posts
          schema:
            type: string
      summary: Get user posts
      tags:
      - posts
swagger: "2.0"
